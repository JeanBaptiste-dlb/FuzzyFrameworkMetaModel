/*
 * generated by Xtext 2.16.0
 */
grammar InternalFuzzyLanguage;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.FuzzyLanguageGrammarAccess;

}

@parser::members {

 	private FuzzyLanguageGrammarAccess grammarAccess;

    public InternalFuzzyLanguageParser(TokenStream input, FuzzyLanguageGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "FuzzyModel";
   	}

   	@Override
   	protected FuzzyLanguageGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleFuzzyModel
entryRuleFuzzyModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuzzyModelRule()); }
	iv_ruleFuzzyModel=ruleFuzzyModel
	{ $current=$iv_ruleFuzzyModel.current; }
	EOF;

// Rule FuzzyModel
ruleFuzzyModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFuzzyModelAccess().getElementsFuzzyConfigParserRuleCall_0_0());
				}
				lv_elements_0_0=ruleFuzzyConfig
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuzzyModelRule());
					}
					add(
						$current,
						"elements",
						lv_elements_0_0,
						"org.xtext.example.mydsl.FuzzyLanguage.FuzzyConfig");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFuzzyModelAccess().getElementsFuzzySystemBuildingParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleFuzzySystemBuilding
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuzzyModelRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"org.xtext.example.mydsl.FuzzyLanguage.FuzzySystemBuilding");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFuzzyModelAccess().getElementsOutputsParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleOutputs
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuzzyModelRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"org.xtext.example.mydsl.FuzzyLanguage.Outputs");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleOutputs
entryRuleOutputs returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutputsRule()); }
	iv_ruleOutputs=ruleOutputs
	{ $current=$iv_ruleOutputs.current; }
	EOF;

// Rule Outputs
ruleOutputs returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Output'
		{
			newLeafNode(otherlv_0, grammarAccess.getOutputsAccess().getOutputKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getOutputsAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOutputsAccess().getOutOutputParserRuleCall_2_0());
				}
				lv_out_2_0=ruleOutput
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOutputsRule());
					}
					set(
						$current,
						"out",
						lv_out_2_0,
						"org.xtext.example.mydsl.FuzzyLanguage.Output");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOutputsAccess().getWrWriteParserRuleCall_3_0());
				}
				lv_wr_3_0=ruleWrite
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOutputsRule());
					}
					set(
						$current,
						"wr",
						lv_wr_3_0,
						"org.xtext.example.mydsl.FuzzyLanguage.Write");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleWrite
entryRuleWrite returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWriteRule()); }
	iv_ruleWrite=ruleWrite
	{ $current=$iv_ruleWrite.current; }
	EOF;

// Rule Write
ruleWrite returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='Write('
			{
				newLeafNode(otherlv_0, grammarAccess.getWriteAccess().getWriteKeyword_0_0());
			}
			(
				(
					lv_value_1_0=RULE_ID
					{
						newLeafNode(lv_value_1_0, grammarAccess.getWriteAccess().getValueIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWriteRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getWriteAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		(
			otherlv_3='Print('
			{
				newLeafNode(otherlv_3, grammarAccess.getWriteAccess().getPrintKeyword_1_0());
			}
			(
				(
					lv_value_4_0=RULE_ID
					{
						newLeafNode(lv_value_4_0, grammarAccess.getWriteAccess().getValueIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWriteRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_4_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getWriteAccess().getRightParenthesisKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleOutput
entryRuleOutput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutputRule()); }
	iv_ruleOutput=ruleOutput
	{ $current=$iv_ruleOutput.current; }
	EOF;

// Rule Output
ruleOutput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_type_0_0='FILE'
					{
						newLeafNode(lv_type_0_0, grammarAccess.getOutputAccess().getTypeFILEKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOutputRule());
						}
						setWithLastConsumed($current, "type", lv_type_0_0, "FILE");
					}
				)
			)
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getOutputAccess().getLeftParenthesisKeyword_0_1());
			}
			(
				(
					lv_path_2_0=RULE_ANYTHING
					{
						newLeafNode(lv_path_2_0, grammarAccess.getOutputAccess().getPathANYTHINGTerminalRuleCall_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOutputRule());
						}
						setWithLastConsumed(
							$current,
							"path",
							lv_path_2_0,
							"org.xtext.example.mydsl.FuzzyLanguage.ANYTHING");
					}
				)
			)
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getOutputAccess().getRightParenthesisKeyword_0_3());
			}
		)
		    |
		(
			(
				lv_type_4_0='CONSOLE'
				{
					newLeafNode(lv_type_4_0, grammarAccess.getOutputAccess().getTypeCONSOLEKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOutputRule());
					}
					setWithLastConsumed($current, "type", lv_type_4_0, "CONSOLE");
				}
			)
		)
		    |
		(
			(
				lv_type_5_0='COUT'
				{
					newLeafNode(lv_type_5_0, grammarAccess.getOutputAccess().getTypeCOUTKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOutputRule());
					}
					setWithLastConsumed($current, "type", lv_type_5_0, "COUT");
				}
			)
		)
	)
;

// Entry rule entryRuleFuzzySystemBuilding
entryRuleFuzzySystemBuilding returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuzzySystemBuildingRule()); }
	iv_ruleFuzzySystemBuilding=ruleFuzzySystemBuilding
	{ $current=$iv_ruleFuzzySystemBuilding.current; }
	EOF;

// Rule FuzzySystemBuilding
ruleFuzzySystemBuilding returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='FuzzySystemBuilding'
		{
			newLeafNode(otherlv_0, grammarAccess.getFuzzySystemBuildingAccess().getFuzzySystemBuildingKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getFuzzySystemBuildingAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFuzzySystemBuildingAccess().getAffectationsAffectationParserRuleCall_2_0());
				}
				lv_affectations_2_0=ruleAffectation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuzzySystemBuildingRule());
					}
					add(
						$current,
						"affectations",
						lv_affectations_2_0,
						"org.xtext.example.mydsl.FuzzyLanguage.Affectation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getFuzzySystemBuildingAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleAffectation
entryRuleAffectation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAffectationRule()); }
	iv_ruleAffectation=ruleAffectation
	{ $current=$iv_ruleAffectation.current; }
	EOF;

// Rule Affectation
ruleAffectation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_name_0_0=RULE_ID
					{
						newLeafNode(lv_name_0_0, grammarAccess.getAffectationAccess().getNameIDTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAffectationRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_0_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_1='='
			{
				newLeafNode(otherlv_1, grammarAccess.getAffectationAccess().getEqualsSignKeyword_0_1());
			}
			(
				(
					lv_value_2_0=RULE_ID
					{
						newLeafNode(lv_value_2_0, grammarAccess.getAffectationAccess().getValueIDTerminalRuleCall_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAffectationRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getAffectationAccess().getLeftParenthesisKeyword_0_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAffectationAccess().getParamsParamParserRuleCall_0_4_0());
					}
					lv_params_4_0=ruleParam
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAffectationRule());
						}
						add(
							$current,
							"params",
							lv_params_4_0,
							"org.xtext.example.mydsl.FuzzyLanguage.Param");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getAffectationAccess().getRightParenthesisKeyword_0_5());
			}
		)
		    |
		(
			(
				(
					lv_name_6_0=RULE_ID
					{
						newLeafNode(lv_name_6_0, grammarAccess.getAffectationAccess().getNameIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAffectationRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_6_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_7='='
			{
				newLeafNode(otherlv_7, grammarAccess.getAffectationAccess().getEqualsSignKeyword_1_1());
			}
			(
				(
					lv_value_8_0=RULE_ANYTHING
					{
						newLeafNode(lv_value_8_0, grammarAccess.getAffectationAccess().getValueANYTHINGTerminalRuleCall_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAffectationRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_8_0,
							"org.xtext.example.mydsl.FuzzyLanguage.ANYTHING");
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_name_9_0=RULE_ID
					{
						newLeafNode(lv_name_9_0, grammarAccess.getAffectationAccess().getNameIDTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAffectationRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_9_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_10='='
			{
				newLeafNode(otherlv_10, grammarAccess.getAffectationAccess().getEqualsSignKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAffectationAccess().getExpExpressionParserRuleCall_2_2_0());
					}
					lv_exp_11_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAffectationRule());
						}
						set(
							$current,
							"exp",
							lv_exp_11_0,
							"org.xtext.example.mydsl.FuzzyLanguage.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_name_0_0=RULE_OPERATOR
					{
						newLeafNode(lv_name_0_0, grammarAccess.getExpressionAccess().getNameOPERATORTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_0_0,
							"org.xtext.example.mydsl.FuzzyLanguage.OPERATOR");
					}
				)
			)
			otherlv_1='{'
			{
				newLeafNode(otherlv_1, grammarAccess.getExpressionAccess().getLeftCurlyBracketKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionAccess().getExpsExpressionParserRuleCall_0_2_0());
					}
					lv_exps_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionRule());
						}
						add(
							$current,
							"exps",
							lv_exps_2_0,
							"org.xtext.example.mydsl.FuzzyLanguage.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_3='}'
			{
				newLeafNode(otherlv_3, grammarAccess.getExpressionAccess().getRightCurlyBracketKeyword_0_3());
			}
		)
		    |
		(
			(
				(
					lv_name_4_0=RULE_ID
					{
						newLeafNode(lv_name_4_0, grammarAccess.getExpressionAccess().getNameIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_4_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_5='is'
			{
				newLeafNode(otherlv_5, grammarAccess.getExpressionAccess().getIsKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionAccess().getValueExpressionParserRuleCall_1_2_0());
					}
					lv_value_6_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionRule());
						}
						set(
							$current,
							"value",
							lv_value_6_0,
							"org.xtext.example.mydsl.FuzzyLanguage.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				lv_name_7_0=RULE_ID
				{
					newLeafNode(lv_name_7_0, grammarAccess.getExpressionAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_7_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleBinding
entryRuleBinding returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBindingRule()); }
	iv_ruleBinding=ruleBinding
	{ $current=$iv_ruleBinding.current; }
	EOF;

// Rule Binding
ruleBinding returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_op_0_0=RULE_OPERATOR
				{
					newLeafNode(lv_op_0_0, grammarAccess.getBindingAccess().getOpOPERATORTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBindingRule());
					}
					setWithLastConsumed(
						$current,
						"op",
						lv_op_0_0,
						"org.xtext.example.mydsl.FuzzyLanguage.OPERATOR");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getBindingAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_target_2_0=RULE_ID
				{
					newLeafNode(lv_target_2_0, grammarAccess.getBindingAccess().getTargetIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBindingRule());
					}
					setWithLastConsumed(
						$current,
						"target",
						lv_target_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getBindingAccess().getLeftParenthesisKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBindingAccess().getParamsParamParserRuleCall_3_1_0());
					}
					lv_params_4_0=ruleParam
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBindingRule());
						}
						add(
							$current,
							"params",
							lv_params_4_0,
							"org.xtext.example.mydsl.FuzzyLanguage.Param");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getBindingAccess().getRightParenthesisKeyword_3_2());
			}
		)?
	)
;

// Entry rule entryRuleParam
entryRuleParam returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParamRule()); }
	iv_ruleParam=ruleParam
	{ $current=$iv_ruleParam.current; }
	EOF;

// Rule Param
ruleParam returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_value_0_0=RULE_ANYTHING
					{
						newLeafNode(lv_value_0_0, grammarAccess.getParamAccess().getValueANYTHINGTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getParamRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_0_0,
							"org.xtext.example.mydsl.FuzzyLanguage.ANYTHING");
					}
				)
			)
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getParamAccess().getCommaKeyword_0_1());
			}
		)
		    |
		(
			(
				lv_value_2_0=RULE_ANYTHING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getParamAccess().getValueANYTHINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParamRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.example.mydsl.FuzzyLanguage.ANYTHING");
				}
			)
		)
	)
;

// Entry rule entryRuleTypeSet
entryRuleTypeSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeSetRule()); }
	iv_ruleTypeSet=ruleTypeSet
	{ $current=$iv_ruleTypeSet.current; }
	EOF;

// Rule TypeSet
ruleTypeSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='set'
		{
			newLeafNode(otherlv_0, grammarAccess.getTypeSetAccess().getSetKeyword_0());
		}
		otherlv_1='Type'
		{
			newLeafNode(otherlv_1, grammarAccess.getTypeSetAccess().getTypeKeyword_1());
		}
		otherlv_2='to'
		{
			newLeafNode(otherlv_2, grammarAccess.getTypeSetAccess().getToKeyword_2());
		}
		(
			(
				lv_typeName_3_0=RULE_ID
				{
					newLeafNode(lv_typeName_3_0, grammarAccess.getTypeSetAccess().getTypeNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeSetRule());
					}
					setWithLastConsumed(
						$current,
						"typeName",
						lv_typeName_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleFuzzyConfig
entryRuleFuzzyConfig returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuzzyConfigRule()); }
	iv_ruleFuzzyConfig=ruleFuzzyConfig
	{ $current=$iv_ruleFuzzyConfig.current; }
	EOF;

// Rule FuzzyConfig
ruleFuzzyConfig returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='FuzzyConfig'
		{
			newLeafNode(otherlv_0, grammarAccess.getFuzzyConfigAccess().getFuzzyConfigKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getFuzzyConfigAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFuzzyConfigAccess().getTypeSETTypeSetParserRuleCall_2_0());
				}
				lv_typeSET_2_0=ruleTypeSet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuzzyConfigRule());
					}
					set(
						$current,
						"typeSET",
						lv_typeSET_2_0,
						"org.xtext.example.mydsl.FuzzyLanguage.TypeSet");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFuzzyConfigAccess().getBindingsListBindingParserRuleCall_3_0());
				}
				lv_BindingsList_3_0=ruleBinding
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuzzyConfigRule());
					}
					add(
						$current,
						"BindingsList",
						lv_BindingsList_3_0,
						"org.xtext.example.mydsl.FuzzyLanguage.Binding");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getFuzzyConfigAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

RULE_ANYTHING : (RULE_INT|RULE_STRING|RULE_DOUBLE|'ASK_USER_FOR_VALUE'|'CONCAVE'|'CONVEXE'|'Up'|'Down');

fragment RULE_DOUBLE : RULE_INT '.' RULE_INT;

RULE_OPERATOR : ('AND'|'NOT'|'OR'|'DEFUZZ'|'THEN'|'AGG');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

fragment RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
