/**
 * generated by Xtext 2.16.0
 */
package org.xtext.example.mydsl.fuzzyLanguage.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.fuzzyLanguage.FuzzyLanguagePackage;
import org.xtext.example.mydsl.fuzzyLanguage.Output;
import org.xtext.example.mydsl.fuzzyLanguage.Outputs;
import org.xtext.example.mydsl.fuzzyLanguage.Write;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Outputs</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.fuzzyLanguage.impl.OutputsImpl#getOut <em>Out</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.fuzzyLanguage.impl.OutputsImpl#getWr <em>Wr</em>}</li>
 * </ul>
 *
 * @generated
 */
public class OutputsImpl extends MinimalEObjectImpl.Container implements Outputs
{
  /**
   * The cached value of the '{@link #getOut() <em>Out</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOut()
   * @generated
   * @ordered
   */
  protected Output out;

  /**
   * The cached value of the '{@link #getWr() <em>Wr</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWr()
   * @generated
   * @ordered
   */
  protected Write wr;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected OutputsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return FuzzyLanguagePackage.Literals.OUTPUTS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Output getOut()
  {
    return out;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOut(Output newOut, NotificationChain msgs)
  {
    Output oldOut = out;
    out = newOut;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, FuzzyLanguagePackage.OUTPUTS__OUT, oldOut, newOut);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOut(Output newOut)
  {
    if (newOut != out)
    {
      NotificationChain msgs = null;
      if (out != null)
        msgs = ((InternalEObject)out).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - FuzzyLanguagePackage.OUTPUTS__OUT, null, msgs);
      if (newOut != null)
        msgs = ((InternalEObject)newOut).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - FuzzyLanguagePackage.OUTPUTS__OUT, null, msgs);
      msgs = basicSetOut(newOut, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FuzzyLanguagePackage.OUTPUTS__OUT, newOut, newOut));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Write getWr()
  {
    return wr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetWr(Write newWr, NotificationChain msgs)
  {
    Write oldWr = wr;
    wr = newWr;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, FuzzyLanguagePackage.OUTPUTS__WR, oldWr, newWr);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWr(Write newWr)
  {
    if (newWr != wr)
    {
      NotificationChain msgs = null;
      if (wr != null)
        msgs = ((InternalEObject)wr).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - FuzzyLanguagePackage.OUTPUTS__WR, null, msgs);
      if (newWr != null)
        msgs = ((InternalEObject)newWr).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - FuzzyLanguagePackage.OUTPUTS__WR, null, msgs);
      msgs = basicSetWr(newWr, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FuzzyLanguagePackage.OUTPUTS__WR, newWr, newWr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case FuzzyLanguagePackage.OUTPUTS__OUT:
        return basicSetOut(null, msgs);
      case FuzzyLanguagePackage.OUTPUTS__WR:
        return basicSetWr(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case FuzzyLanguagePackage.OUTPUTS__OUT:
        return getOut();
      case FuzzyLanguagePackage.OUTPUTS__WR:
        return getWr();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case FuzzyLanguagePackage.OUTPUTS__OUT:
        setOut((Output)newValue);
        return;
      case FuzzyLanguagePackage.OUTPUTS__WR:
        setWr((Write)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case FuzzyLanguagePackage.OUTPUTS__OUT:
        setOut((Output)null);
        return;
      case FuzzyLanguagePackage.OUTPUTS__WR:
        setWr((Write)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case FuzzyLanguagePackage.OUTPUTS__OUT:
        return out != null;
      case FuzzyLanguagePackage.OUTPUTS__WR:
        return wr != null;
    }
    return super.eIsSet(featureID);
  }

} //OutputsImpl
