/**
 * generated by Xtext 2.16.0
 */
package org.xtext.example.mydsl.fuzzyLanguage.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.fuzzyLanguage.Binding;
import org.xtext.example.mydsl.fuzzyLanguage.FuzzyConfig;
import org.xtext.example.mydsl.fuzzyLanguage.FuzzyLanguagePackage;
import org.xtext.example.mydsl.fuzzyLanguage.TypeSet;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Fuzzy Config</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.fuzzyLanguage.impl.FuzzyConfigImpl#getTypeSET <em>Type SET</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.fuzzyLanguage.impl.FuzzyConfigImpl#getBindingsList <em>Bindings List</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FuzzyConfigImpl extends MinimalEObjectImpl.Container implements FuzzyConfig
{
  /**
   * The cached value of the '{@link #getTypeSET() <em>Type SET</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTypeSET()
   * @generated
   * @ordered
   */
  protected TypeSet typeSET;

  /**
   * The cached value of the '{@link #getBindingsList() <em>Bindings List</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBindingsList()
   * @generated
   * @ordered
   */
  protected EList<Binding> bindingsList;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FuzzyConfigImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return FuzzyLanguagePackage.Literals.FUZZY_CONFIG;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TypeSet getTypeSET()
  {
    return typeSET;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTypeSET(TypeSet newTypeSET, NotificationChain msgs)
  {
    TypeSet oldTypeSET = typeSET;
    typeSET = newTypeSET;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, FuzzyLanguagePackage.FUZZY_CONFIG__TYPE_SET, oldTypeSET, newTypeSET);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTypeSET(TypeSet newTypeSET)
  {
    if (newTypeSET != typeSET)
    {
      NotificationChain msgs = null;
      if (typeSET != null)
        msgs = ((InternalEObject)typeSET).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - FuzzyLanguagePackage.FUZZY_CONFIG__TYPE_SET, null, msgs);
      if (newTypeSET != null)
        msgs = ((InternalEObject)newTypeSET).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - FuzzyLanguagePackage.FUZZY_CONFIG__TYPE_SET, null, msgs);
      msgs = basicSetTypeSET(newTypeSET, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FuzzyLanguagePackage.FUZZY_CONFIG__TYPE_SET, newTypeSET, newTypeSET));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Binding> getBindingsList()
  {
    if (bindingsList == null)
    {
      bindingsList = new EObjectContainmentEList<Binding>(Binding.class, this, FuzzyLanguagePackage.FUZZY_CONFIG__BINDINGS_LIST);
    }
    return bindingsList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case FuzzyLanguagePackage.FUZZY_CONFIG__TYPE_SET:
        return basicSetTypeSET(null, msgs);
      case FuzzyLanguagePackage.FUZZY_CONFIG__BINDINGS_LIST:
        return ((InternalEList<?>)getBindingsList()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case FuzzyLanguagePackage.FUZZY_CONFIG__TYPE_SET:
        return getTypeSET();
      case FuzzyLanguagePackage.FUZZY_CONFIG__BINDINGS_LIST:
        return getBindingsList();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case FuzzyLanguagePackage.FUZZY_CONFIG__TYPE_SET:
        setTypeSET((TypeSet)newValue);
        return;
      case FuzzyLanguagePackage.FUZZY_CONFIG__BINDINGS_LIST:
        getBindingsList().clear();
        getBindingsList().addAll((Collection<? extends Binding>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case FuzzyLanguagePackage.FUZZY_CONFIG__TYPE_SET:
        setTypeSET((TypeSet)null);
        return;
      case FuzzyLanguagePackage.FUZZY_CONFIG__BINDINGS_LIST:
        getBindingsList().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case FuzzyLanguagePackage.FUZZY_CONFIG__TYPE_SET:
        return typeSET != null;
      case FuzzyLanguagePackage.FUZZY_CONFIG__BINDINGS_LIST:
        return bindingsList != null && !bindingsList.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //FuzzyConfigImpl
